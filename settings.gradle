import java.nio.charset.StandardCharsets

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}



rootProject.name = "NewQStory"
include ':app'

def libs = new File(rootDir.getPath() + "/libs")
writeTextToFile(rootDir.getPath()+"/Library manifest","",false)
for (File moduleDir : libs.listFiles()) {
    if (moduleDir.isDirectory()) {
        for (File module : moduleDir.listFiles()) {
            String moduleName = ":" + module.getName()
            include(moduleName)
            project(moduleName).projectDir = module
            writeTextToFile(rootDir.getPath() + "/Library manifest", moduleName + "\n", true)
        }
    }

}
static void writeTextToFile(String path, String content, boolean isAppend) {
    File file = new File(path);
    try {
        //先创建文件夹
        if (!file.getParentFile().exists())
            file.getParentFile().mkdirs();
        //再创建文件 FileOutputStream会自动创建文件但是不能创建多级目录
        if (!file.exists())
            file.createNewFile();
    } catch (IOException e) {
        e.printStackTrace();
    }
    try (BufferedWriter writer = new BufferedWriter(
            new OutputStreamWriter(new FileOutputStream(file, isAppend), StandardCharsets.UTF_8))) {
        writer.write(content);
    } catch (IOException e) {
        e.printStackTrace();
    }
}
